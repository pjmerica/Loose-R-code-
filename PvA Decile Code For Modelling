# Load required libraries
library(dplyr)
library(openxlsx)
library(rlang)

# ---- Your actual dataset ----
df <- data.frame(
  speed_score = c(123, 123, 4423),
  googlers = c("tim", "tom", "tam"),   # Non-numeric column
  funnumbers = c(12, 21, 3),
  Bad_units = c(1, 0, 1),
  Preds = c(0.03, 0.02, 0.01)
)

# ---- Function to compute decile summary with range (min, max) ----
compute_feature_deciles <- function(data, feature_col, pred_col = "Preds", bad_col = "Bad_units") {
  # Convert column names to symbols for tidy evaluation
  feature_sym <- sym(feature_col)
  pred_sym <- sym(pred_col)
  bad_sym <- sym(bad_col)
  
  data %>%
    mutate(decile = ntile(!!feature_sym, 10)) %>%
    group_by(decile) %>%
    summarise(
      avg_preds = mean(!!pred_sym, na.rm = TRUE),
      bad_rate = sum(!!bad_sym, na.rm = TRUE) / n(),
      count = n(),
      min_value = min(!!feature_sym, na.rm = TRUE),   # Minimum value in each decile
      max_value = max(!!feature_sym, na.rm = TRUE),   # Maximum value in each decile
      .groups = "drop"
    ) %>%
    arrange(decile)
}

# ---- Create a new workbook ----
wb <- createWorkbook()
addWorksheet(wb, "Decile Summaries")

# ---- Select numeric features only (excluding Preds and Bad_units) ----
feature_cols <- df %>%
  select_if(is.numeric) %>%    # Use select_if to select only numeric columns
  select(-Preds, -Bad_units) %>%  # Exclude Preds and Bad_units
  colnames()  # Extract column names

# ---- Write decile summaries ----
row_pointer <- 1

for (feature in feature_cols) {
  summary_df <- compute_feature_deciles(df, feature)
  
  # Write feature name
  writeData(wb, sheet = 1, x = paste("Feature:", feature), startRow = row_pointer, startCol = 1)
  row_pointer <- row_pointer + 1
  
  # Write summary table
  writeDataTable(wb, sheet = 1, x = summary_df, startRow = row_pointer, startCol = 1)
  
  # Move pointer down for next block
  row_pointer <- row_pointer + nrow(summary_df) + 3
}

# ---- Save the workbook to Excel ----
saveWorkbook(wb, "decile_summaries_by_feature_with_range.xlsx", overwrite = TRUE)




---- For Deciles of predictions



# Load necessary libraries
library(dplyr)
library(writexl)

# Sample data - replace with your actual data
# Suppose you have a data frame with columns: predicted and actual
set.seed(123)
data <- data.frame(
  predicted = runif(1000, 0, 1),  # model predictions
  actual = runif(1000, 0, 1)      # actual losses
)

# Step 1: Create deciles based on predicted values
data <- data %>%
  mutate(decile = ntile(predicted, 10))

# Step 2: Calculate loss rate and MAPE per decile
decile_summary <- data %>%
  group_by(decile) %>%
  summarise(
    avg_predicted = mean(predicted),
    avg_actual = mean(actual),
    loss_rate = sum(actual) / n(),
    MAPE = mean(abs((actual - predicted) / ifelse(actual == 0, NA, actual)), na.rm = TRUE),
    .groups = "drop"
  )

# Step 3: Export to Excel
write_xlsx(decile_summary, "decile_analysis.xlsx")

# Print the output
print(decile_summary)
