# Load required packages
library(dplyr)
library(openxlsx)

# ---- Sample Data ----
set.seed(42)
df <- data.frame(
  feature1 = rnorm(1000, 50, 10),
  feature2 = rnorm(1000, 30, 5),
  feature3 = runif(1000, 0, 1),
  preds = runif(1000, 0, 1),
  bads = rbinom(1000, 1, 0.2)  # 20% bad rate
)

# ---- Function to compute decile summary for one feature ----
compute_feature_deciles <- function(data, feature_col, pred_col = "preds", bad_col = "bads") {
  data %>%
    mutate(decile = ntile(!!sym(feature_col), 10)) %>%
    group_by(decile) %>%
    summarise(
      avg_preds = mean(!!sym(pred_col), na.rm = TRUE),
      total_bads = sum(!!sym(bad_col), na.rm = TRUE),
      count = n(),
      bad_rate = total_bads / count,
      .groups = "drop"
    ) %>%
    select(decile, avg_preds, bad_rate, count) %>%
    arrange(decile)
}

# ---- Create Workbook ----
wb <- createWorkbook()
addWorksheet(wb, "Decile Summaries")

# ---- Loop through all feature columns ----
# Exclude 'preds' and 'bads' from features
feature_cols <- setdiff(colnames(df), c("preds", "bads"))

row_pointer <- 1  # Start row for Excel

for (feature in feature_cols) {
  
  # Compute summary
  summary_df <- compute_feature_deciles(df, feature)
  
  # Write feature name
  writeData(wb, sheet = 1, x = paste("Feature:", feature), startRow = row_pointer, startCol = 1)
  row_pointer <- row_pointer + 1
  
  # Write summary table
  writeDataTable(wb, sheet = 1, x = summary_df, startRow = row_pointer, startCol = 1)
  
  # Move pointer down for next table (add space)
  row_pointer <- row_pointer + nrow(summary_df) + 3
}

# ---- Save Workbook ----
saveWorkbook(wb, "decile_summaries_by_feature.xlsx", overwrite = TRUE)
